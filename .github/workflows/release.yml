name: Release

on:
  push:
    branches:
      - master

jobs:
  check-next-version:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22]

    outputs:
      next_version: ${{ steps.versionCheck.outputs.next_version }}
      current_version: ${{ steps.versionCheck.outputs.current_version }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: master

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v4
        id: cache-node-modules
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ./node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('./packages/*/package-lock.json') }}-${{ hashFiles('./package-lock.json') }}
      
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - id: versionCheck
        run: |
          echo "next_version=$(node ./node_modules/.bin/happy-next-version)" >> $GITHUB_OUTPUT
          echo "current_version=$(node ./node_modules/.bin/happy-current-version)" >> $GITHUB_OUTPUT

  publish: 
    runs-on: ubuntu-latest
    needs: [check-next-version]
    if: ${{ needs.check-next-version.outputs.next_version != '' }}

    strategy:
      matrix:
        node-version: [22]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GIT_REPOSITORY_ACCESS_TOKEN }}
          ref: master

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Cache node modules
        uses: actions/cache@v4
        id: cache-node-modules
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ./node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('./packages/*/package-lock.json') }}-${{ hashFiles('./package-lock.json') }}

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: turbo-master-${{ github.sha }}
          restore-keys: |
            turbo-master
      
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Set version
        run: node ./node_modules/.bin/happy-set-workspace-version --version=${{needs.check-next-version.outputs.next_version }}

      - name: Compile packages
        run: npm run compile

      - name: Run tests
        run: npm run test

      - name: Pushes Git tag
        run: |
          git tag --force v${{ needs.check-next-version.outputs.next_version }} ${GITHUB_SHA}
          git push origin --tags

      - name: Set .npmrc for publish
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_PUBLISH_TOKEN }}" > ./.npmrc
          npm whoami

      - name: Publish packages
        run: npm publish --workspaces

  create-release:
    runs-on: ubuntu-latest
    needs: [publish, check-next-version]

    strategy:
      matrix:
        node-version: [22]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: master

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v4
        id: cache-node-modules
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ./node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('./packages/*/package-lock.json') }}-${{ hashFiles('./package-lock.json') }}
      
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Generate release notes
        run: node ./node_modules/.bin/happy-release-notes --author=githubUsername > ./RELEASE_NOTES.md

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.check-next-version.outputs.next_version }}
          release_name: v${{ needs.check-next-version.outputs.next_version }}
          body_path: ./RELEASE_NOTES.md
          draft: false
          prerelease: false